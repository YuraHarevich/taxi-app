app:
  urls:
    openrouteservice:
      longitude: 27.56667
      latitude: 53.9
      radius: 11
      base-url: https://api.openrouteservice.org
      directions_relational_url: v2/directions/driving-car
      geocode_relational_url: geocode/search
      api-key: ${API_KEY:default}
      country-iso-code: "BLR"
    services:
      passenger-service-url: "localhost:8010/api/v1/passengers"
      driver-service-url: "localhost:8020/api/v1/drivers"
      ride-service-url: "localhost:8030/api/v1/rides"
server:
  port: 8030
spring:
  application:
    name: ride-service
  datasource:
    driver-class-name: ${DB_DRIVER:org.postgresql.Driver}
    url: ${DB_URL:jdbc:postgresql://localhost:5435/ride}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:password}
  jpa:
    hibernate:
      ddl-auto: validate
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  liquibase:
    change-log: classpath:/db/changelog/app-changelog.xml
  kafka:
    topic:
      order-queue: order-topic
    producer:
      bootstrap-server: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: rideRequest:com.Harevich.rideservice.dto.request.RideRequest
    consumer:
      bootstrap-servers: localhost:9092
      group-id: order-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
        spring.json.type.mapping: rideRequest:com.Harevich.rideservice.dto.request.RideRequest

logging:
  level:
    com.netflix.discovery: DEBUG
    feign: DEBUG
    org.springframework.web.client: DEBUG
    org.apache.http: DEBUG
    org.springframework.web: DEBUG

feign:
  client:
    config:
      geolocation-client:
        loggerLevel: full