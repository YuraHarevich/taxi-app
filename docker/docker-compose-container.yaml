services:
  #<-------- My services ------------>
  driver-service:
    container_name: ms-drivers
    build:
      context: ../services/driver-service
      dockerfile: ../../docker/Dockerfile
      args:
        SERVICE_NAME: driver-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    restart: always
    ports:
      - "8020:8020"
    depends_on:
      - drivers_postgresql
    networks:
      - microservices-net

  passenger-service:
    container_name: ms-passengers
    build:
      context: ../services/passenger-service
      dockerfile: ../../docker/Dockerfile
      args:
        SERVICE_NAME: passenger-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    restart: always
    ports:
      - "8010:8010"
    depends_on:
      - passengers_postgresql
    networks:
      - microservices-net

  ride-service:
    container_name: ms-rides
    build:
      context: ../services/ride-service
      dockerfile: ../../docker/Dockerfile
      args:
        SERVICE_NAME: ride-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      API_KEY: ${API_KEY}
    restart: always
    ports:
      - "8030:8030"
    depends_on:
      - rides_postgresql
      - kafka
      - zookeeper
    networks:
      - microservices-net

  rating-service:
    container_name: ms-ratings
    build:
      context: ../services/rating-service
      dockerfile: ../../docker/Dockerfile
      args:
        SERVICE_NAME: rating-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    restart: always
    ports:
      - "8040:8040"
    depends_on:
      - mongo_db
    networks:
      - microservices-net


  #<-------- DBs ------------>

  drivers_postgresql:
    container_name: ms_drivers_pg_sql
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: drivers
    volumes:
      - drivers_psql:/data/postgres
    ports:
      - "5434:5432"
    networks:
      - microservices-net
    restart: unless-stopped

  passengers_postgresql:
    container_name: ms_passengers_pg_sql
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: passengers
    volumes:
      - passengers_psql:/data/postgres
    ports:
      - "5433:5432"
    networks:
      - microservices-net
    restart: unless-stopped

  rides_postgresql:
    container_name: ms_ride_pg_sql
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ride
    volumes:
      - rides_psql:/data/postgres
    ports:
      - "5435:5432"
    networks:
      - microservices-net
    restart: unless-stopped

  mongo_db:
    container_name: ratings_mongodb
    image: mongo
    restart: always
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://ratings_mongodb/ratings
    ports:
      - "27017:27017"
    networks:
      - microservices-net

  #<-------- Additional ------------>

  pgadmin:
    container_name: ms_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - microservices-net
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - microservices-net

  kafka:
    container_name: ms_kafka
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://ms_kafka:9092
    networks:
      - microservices-net

  #<----------------------------------------------->

networks:
  microservices-net:
    driver: bridge
volumes:
  drivers_psql:
  passengers_psql:
  rides_psql:
  pgadmin: